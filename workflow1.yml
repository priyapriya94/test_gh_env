name: Secure VPC
on:
  workflow_dispatch:
    inputs:
      env:
        type: choice
        description: Make a choice
        options:
        - dev
        - qa
        - stage
        - prod
  workflow_call:
    inputs:
      env:
        type: string
        required: true
    secrets:
      TOKEN_GH:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true    

env:
  AWS_REGION: ca-central-1
  application: erps
jobs:
  secure-vpc-deploy:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: 'dyedurham/CASHMGMT-ERPSPDJ-secure-vpc'
          ref: 'main'
          token: ${{ secrets.TOKEN_GH }}

      - name: aws cli configuration
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ERPS_NONP_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ERPS_NONP_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: seting id and env
        run: |
          echo "id=`echo ${{ inputs.env }} | tr -d -c 0-9`" >> $GITHUB_ENV
          echo "envid=`echo ${{ inputs.env }} | tr -d -c a-z`" >> $GITHUB_ENV
          
      - name: print id
        run: if [ -z ${{ env.id }} ]; then echo "id=01" >> $GITHUB_ENV ; fi

      - name: Set prefix
        run: |
          echo "prefix=/${{ env.envid }}/${{ env.application }}/${{ env.id }}" >> $GITHUB_ENV

      - name: Set env
        run: |
             if [[ ${{ inputs.env }} = dev ]]; then
               echo "VpcCidrBlock=10.190.0.0/18" >> $GITHUB_ENV
             elif [[ ${{ inputs.env }} = qa ]]; then
               echo "VpcCidrBlock=10.191.0.0/18" >> $GITHUB_ENV
             elif [[ ${{ inputs.env }} = stage ]]; then
               echo "VpcCidrBlock=10.192.0.0/18" >> $GITHUB_ENV
             elif [[ ${{ inputs.env }} = prod ]]; then
               echo "VpcCidrBlock=10.193.0.0/18" >> $GITHUB_ENV
             fi


 
      - name: Deploy with CloudFormation
        id: vpc-stack
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.envid }}-${{ env.application }}-${{ env.id }}-vpc
          template: vpc.yml
          no-fail-on-empty-changeset: "1"
          parameter-overrides: >-
            NamePrefix=${{ env.envid }}-${{ env.application }}-${{ env.id }},
            NumberOfAZs=3,
            AlertFallbackEmail=mandeep.singh@dyedurham.com,
            CloudWatchLogsRetentionInDays=14,
            VpcCidrBlock=${{ env.VpcCidrBlock }},
            PublicSubnetCidrSize=22,
            PrivateSubnetCidrSize=19,
            ProtectedSubnetCidrSize=22,
            ParametersPath=${{ env.prefix }}/aws/vpc,
            DomainName=erps${{ inputs.env }}.local
    outputs:
      out_env: ${{ inputs.env }}
